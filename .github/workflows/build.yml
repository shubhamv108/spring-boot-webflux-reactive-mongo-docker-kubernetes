# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: build
#    - name: Code Analyze
#      uses: pmd/pmd-github-action@v1
#      id: pmd
#      with:
#        version: '6.40.0'
#        sourcePath: 'src/main/java'
#        rulesets: 'ruleset.xml'
#        analyzeModifiedFilesOnly: true
#    - name: Upload SARIF file
#      uses: github/codeql-action/upload-sarif@v1
#      with:
#        sarif_file: pmd-report.sarif
    - name: Fail build if there are violations
      if: steps.pmd.outputs.violations != 0
      run: exit 1
    - name: Generate JaCoCo badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        badges-directory: badges
        generate-branches-badge: true
        generate-summary: true
    - name: Log coverage percentages to workflow output
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branches = ${{ steps.jacoco.outputs.branches }}"
    - name: Upload JaCoCo coverage report as a workflow artifact
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/
#    - name: Commit and push the coverage badges and summary file
#      if: ${{ github.event_name != 'pull_request' }}
#      run: |
#        cd badges
#        if [[ `git status --porcelain *.svg *.json` ]]; then
#          git config --global user.name 'github-actions'
#          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
#          git add *.svg *.json
#          git commit -m "Autogenerated JaCoCo coverage badges" *.svg *.json
#          git push
#        fi
#    - name: Comment on PR with coverage percentages
#      if: ${{ github.event_name == 'pull_request' }}
#      run: |
#        REPORT=$(<badges/coverage-summary.json)
#        COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
#        BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
#        NEWLINE=$'\n'
#        BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
#        gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker Login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/student:latest
    - name: Docker Push To DockerHub
      run: docker push ${{secrets.DOCKER_USER}}/student
